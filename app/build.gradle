import net.ltgt.gradle.errorprone.ErrorProneToolChain

apply plugin: 'com.android.application'
apply plugin: "net.ltgt.errorprone-base"

configurations.errorprone.resolutionStrategy.force 'com.google.errorprone:error_prone_core:2.0.5'


android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId 'org.xkqr.hackers_hexinput'
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
}

project.afterEvaluate {
    android.applicationVariants.each { variant ->
        def verifyTask = "verifyJML${variant.name}"

        // First create a task to verify this build variant
        tasks.create(verifyTask, JavaExec) {
            doFirst {
                mkdir "${projectDir}/build/generated/openjml/${variant.name}"
            }

            args("-properties")
            args("${rootDir}/openjml.properties")
            args("-logic")
            args("-AUFNIRA")
            args("-timeout")
            args("20")
            args("-progress")
            args("-implicit:class")
            args("-d")
            args("${projectDir}/build/generated/openjml/${variant.name}")
            args("-esc")
            args("-dir")
            args("${projectDir}/src/proof_utils/java/")
            args("${projectDir}/src/main/java/org/xkqr/hackers_hexinput/Hexagon.java")
            args("${projectDir}/src/main/java/org/xkqr/hackers_hexinput/HexCoordinate.java")
            //args("-dirs")
            //args("${projectDir}/src/main/java")
            //args("${buildDir}/generated/source/r/${variant.name}")

            classpath(files("${rootDir}/openjml-0.8.16/openjml.jar"))
            classpath(files(android.bootClasspath))
            classpath(files(variant.javaCompile.classpath))
            //classpath(files(variant.javaCompile.destinationDir.path))

            //classpath.each{path->println path}
            //println args

            standardOutput = System.out
            errorOutput = System.err
            main = "org.jmlspecs.openjml.Main"

            println commandLine
        }

        // Then we insert it as a mandatory step in the build process
        variant.javaCompile.dependsOn verifyTask
    }
}

/*afterEvaluate {
  android.applicationVariants.each {
    it.javaCompile.toolChain ErrorProneToolChain.create(project)
    it.javaCompile.options.compilerArgs.addAll()
  }
}*/

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
